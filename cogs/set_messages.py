# SETTINGS

#disnake
import disnake
from disnake.ext import commands

#other
import requests
import json

#own
from main import botColor, blacklist, conn, cur
from replics import replic

whitelist = []

class StgMsg(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
    
    @commands.slash_command()
    async def message(self, ctx):
        pass
    
    @message.sub_command(description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ø—Ä–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞.")
    async def join(self, ctx, channel: disnake.TextChannel, text="{mention}, –¥–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!"):

        # ACCESS CHECK
        access = cur.execute("""SELECT role FROM access WHERE guild = ?""", (ctx.guild.id,)).fetchone()
        if access != None:
            for role in ctx.author.roles:
                if role.id not in access: isAccessed = False
                else: isAccessed = True; break
            if isAccessed == False and int(ctx.author.id) != int(ctx.guild.owner_id): await ctx.send(embed = disnake.Embed(title=replic['error'], description="–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏!", color=botColor)); return
        else:
            if ctx.author.id != ctx.guild.owner_id: await ctx.send(embed = disnake.Embed(title=replic['error'], description="–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏!", color=botColor)); return
        # END CHECK
        
        async def button_callback(interaction):
            if ctx.author.id == interaction.author.id:
                delembed = disnake.Embed(title=f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', color=botColor)
                if ctx.guild.icon != None: delembed.set_thumbnail(url=ctx.guild.icon)
                delembed.description = f"–ì–æ—Ç–æ–≤–æ! –û—Ç–Ω—ã–Ω–µ —è –Ω–µ –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è —Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ–º –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤."

                cur.execute("""DELETE FROM messageOnJoin WHERE guild = ?""", (ctx.guild.id,))
                conn.commit()
                await interaction.response.edit_message(embed=delembed, view=None)
            else:
                embed = disnake.Embed(title=replic['error'], color=botColor)
                embed.description = "–î–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–µ–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ—Ç –∫—Ç–æ –≤—ã–∑–≤–∞–ª –µ—ë!"
                await interaction.response.send_message(embed=embed, ephemeral=True)

        cur.execute("""SELECT channel, text FROM messageOnJoin WHERE guild = ?""", (ctx.guild.id,))
        content = cur.fetchone()

        embed = disnake.Embed(title=f'–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –Ω–æ–≤—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', color=botColor)
        if ctx.guild.icon != None: embed.set_thumbnail(url=ctx.guild.icon)
        
        if content == None:
            cur.execute("""INSERT INTO messageOnJoin VALUES (?, ?, ?)""", (ctx.guild.id, channel.id, text,))
            conn.commit()
        else:
            cur.execute("""UPDATE messageOnJoin SET channel = ?, text = ? WHERE guild = ?""", (channel.id, text, ctx.guild.id,))
            conn.commit()
        
        embed.description = f"–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –ø—Ä–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä, —è –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ <#{channel.id}>, —Å —ç—Ç–∏–º —Ç–µ–∫—Å—Ç–æ–º."
        if "{mention}" in text and "{member}" in text: embed.add_field(name="–¢–µ–∫—Å—Ç:", value=text.format(member=ctx.author, mention=ctx.author.mention))
        elif "{member}" in text: embed.add_field(name="–¢–µ–∫—Å—Ç:", value=text.format(member=ctx.author))
        elif "{mention}" in text: embed.add_field(name="–¢–µ–∫—Å—Ç:", value=text.format(mention=ctx.author.mention))
        else: embed.add_field(name="–¢–µ–∫—Å—Ç:", value=text)

        view = disnake.ui.View()
        item = disnake.ui.Button(style=disnake.ButtonStyle.danger, label="–û—á–∏—Å—Ç–∏—Ç—å", emoji="ü¶ä")
        item.callback = button_callback
        view.add_item(item=item)
        
        await ctx.send(embed=embed, view=view)


    @message.sub_command(description="–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –ø—Ä–∏ —É—Ö–æ–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞.")
    async def left(self, ctx, channel: disnake.TextChannel, text="{member}, –ø—Ä–æ—â–∞–π!"):

        # ACCESS CHECK
        access = cur.execute("""SELECT role FROM access WHERE guild = ?""", (ctx.guild.id,)).fetchone()
        if access != None:
            for role in ctx.author.roles:
                if role.id not in access: isAccessed = False
                else: isAccessed = True; break
            if isAccessed == False and int(ctx.author.id) != int(ctx.guild.owner_id): await ctx.send(embed = disnake.Embed(title=replic['error'], description="–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏!", color=botColor)); return
        else:
            if ctx.author.id != ctx.guild.owner_id: await ctx.send(embed = disnake.Embed(title=replic['error'], description="–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏!", color=botColor)); return
        # END CHECK
        
        async def button_callback(interaction):
            if ctx.author.id == interaction.author.id:
                delembed = disnake.Embed(title=f'–ü—Ä–æ—â–∞–Ω–∏–µ —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏', color=botColor)
                if ctx.guild.icon != None: delembed.set_thumbnail(url=ctx.guild.icon)
                delembed.description = f"–ì–æ—Ç–æ–≤–æ! –û—Ç–Ω—ã–Ω–µ —è –Ω–µ –±—É–¥—É –ø—Ä–∏—Å—ã–ª–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –æ —É—Ö–æ–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤."
                
                cur.execute("""DELETE FROM messageOnLeft WHERE guild = ?""", (ctx.guild.id,))
                conn.commit()
                await interaction.response.edit_message(embed=delembed, view=None)
            else:
                embed = disnake.Embed(title=replic['error'], color=botColor)
                embed.description = "–î–æ—Å—Ç—É–ø –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∏–º–µ–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ—Ç –∫—Ç–æ –≤—ã–∑–≤–∞–ª –µ—ë!"
                await interaction.response.send_message(embed=embed, ephemeral=True)

        cur.execute("""SELECT channel, text FROM messageOnLeft WHERE guild = ?""", (ctx.guild.id,))
        content = cur.fetchone()

        embed = disnake.Embed(title=f'–ü—Ä–æ—â–∞–Ω–∏–µ —Å —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏', color=botColor)
        if ctx.guild.icon != None: embed.set_thumbnail(url=ctx.guild.icon)
        
        if content == None:
            cur.execute("""INSERT INTO messageOnLeft VALUES (?, ?, ?)""", (ctx.guild.id, channel.id, text,))
            conn.commit()
        else:
            cur.execute("""UPDATE messageOnLeft SET channel = ?, text = ? WHERE guild = ?""", (channel.id, text, ctx.guild.id,))
            conn.commit()
        
        embed.description = f"–ì–æ—Ç–æ–≤–æ! –¢–µ–ø–µ—Ä—å –ø—Ä–∏ —É—Ö–æ–¥–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å —Å–µ—Ä–≤–µ—Ä–∞, —è –±—É–¥—É –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ <#{channel.id}>, —Å —ç—Ç–∏–º —Ç–µ–∫—Å—Ç–æ–º."
        if "{mention}" in text and "{member}" in text: embed.add_field(name="–¢–µ–∫—Å—Ç:", value=text.format(member=ctx.author, mention=ctx.author.mention))
        elif "{member}" in text: embed.add_field(name="–¢–µ–∫—Å—Ç:", value=text.format(member=ctx.author))
        elif "{mention}" in text: embed.add_field(name="–¢–µ–∫—Å—Ç:", value=text.format(mention=ctx.author.mention))
        else: embed.add_field(name="–¢–µ–∫—Å—Ç:", value=text)

        view = disnake.ui.View()
        item = disnake.ui.Button(style=disnake.ButtonStyle.danger, label="–û—á–∏—Å—Ç–∏—Ç—å", emoji="ü¶ä")
        item.callback = button_callback
        view.add_item(item=item)
        
        await ctx.send(embed=embed, view=view)
    
    @commands.command()
    async def check(self, ctx):
        cur.execute("""SELECT channel, text FROM messageOnJoin WHERE guild = ?""", (ctx.guild.id,))
        content = cur.fetchone()

        print(content)


def setup(bot):
    bot.add_cog(StgMsg(bot))